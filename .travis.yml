sudo: false
language: cpp
cache: ccache
matrix:
  include:

  # Ubuntu, g++-8
  - os: linux
    compiler: gcc
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
          - libboost1.55-all-dev
          - g++-8
          - gcc-8
    env:
    - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
    - LABEL="linux"
    - _DEPLOYABLE="true"
    - STRIP="strip"

  # Ubuntu, g++-7
  - os: linux
    compiler: gcc
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
          - libboost1.55-all-dev
          - g++-7
          - gcc-7
    env:
    - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
    - LABEL="linux-g++-7"
    - STRIP="strip"

  # Ubuntu, clang-6
  - os: linux
    compiler: clang
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-trusty-6.0
        packages:
          - libboost1.55-all-dev
          - clang-6.0
          - libstdc++-7-dev
    env:
    - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
    - LABEL="linux-clang-6"
    - STRIP="strip"

  ## OSX, g++-8
  - os: osx
    osx_image: xcode10
    compiler: gcc
    env:
    - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
    - LABEL="osx-g++-8"
    - STRIP="strip"

  # OSX, g++-7
  - os: osx
    osx_image: xcode10
    compiler: gcc
    env:
    - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
    - LABEL="osx-g++-7"
    - STRIP="strip"

  # OSX, clang
  - os: osx
    osx_image: xcode10
    compiler: clang
    env:
    - MATRIX_EVAL="CC=/usr/local/opt/llvm/bin/clang && CXX=/usr/local/opt/llvm/bin/clang++"
    - LABEL="osx"
    - _DEPLOYABLE="true"
    - STRIP="strip"

  # Arm (aarch64) cross compile
  - os: linux
    env:
    - MATRIX_EVAL="CC=aarch64-linux-gnu-gcc && CXX=aarch64-linux-gnu-g++"
    - LABEL="aarch64"
    - _DEPLOYABLE="true"
    - STRIP="aarch64-linux-gnu-strip"

before_install:
- eval $MATRIX_EVAL

install:
# Need to uninstall oclint to get newer gcc installed https://github.com/travis-ci/travis-ci/issues/8826
- if [[ "${LABEL:0:3}" == "osx" ]]; then brew cask uninstall --force oclint || true ; fi

# Need a newer version of llvm to link against to get std::filesystem / std::experimental::filesystem
- if [[ "${LABEL:0:3}" == "osx" ]]; then brew install llvm || brew upgrade llvm ; fi

# Neeed to install ccache
- if [[ "${LABEL:0:3}" == "osx" ]]; then brew install ccache ; fi
- if [[ "${LABEL:0:3}" == "osx" ]]; then export PATH="/usr/local/opt/ccache/libexec:$PATH" ; fi

# Install the correct gcc version
- if [[ "$LABEL" == "osx-g++-8" ]]; then brew install gcc@8 ; fi
- if [[ "$LABEL" == "osx-g++-7" ]]; then brew install gcc@7 ; fi

- if [[ "$LABEL" == "aarch64" ]]; then export BASEDIR=`pwd` ; fi
- if [[ "$LABEL" == "aarch64" ]]; then cd $HOME ; fi
- if [[ "$LABEL" == "aarch64" ]]; then wget https://armkeil.blob.core.windows.net/developer/Files/downloads/gnu-a/8.2-2018.08/gcc-arm-8.2-2018.08-x86_64-aarch64-linux-gnu.tar.xz ; fi
- if [[ "$LABEL" == "aarch64" ]]; then wget http://sourceforge.net/projects/boost/files/boost/1.55.0/boost_1_55_0.tar.gz ; fi
- if [[ "$LABEL" == "aarch64" ]]; then mkdir toolchain && cd toolchain ; fi
- if [[ "$LABEL" == "aarch64" ]]; then tar xfv ../gcc-arm-8.2-2018.08-x86_64-aarch64-linux-gnu.tar.xz >/dev/null ; fi
- if [[ "$LABEL" == "aarch64" ]]; then cd gcc-arm-8.2-2018.08-x86_64-aarch64-linux-gnu ; fi
- if [[ "$LABEL" == "aarch64" ]]; then tar zxvf ../../boost_1_55_0.tar.gz >/dev/null ; fi
- if [[ "$LABEL" == "aarch64" ]]; then cd boost_1_55_0 ; fi
- if [[ "$LABEL" == "aarch64" ]]; then ./bootstrap.sh ; fi
- if [[ "$LABEL" == "aarch64" ]]; then curl https://raw.githubusercontent.com/BitNovex/BitNovex/development/scripts/fix_boost_aarch64.sh | sh ; fi
- if [[ "$LABEL" == "aarch64" ]]; then ./b2 toolset=gcc-aarch64 --with-system --with-filesystem --with-thread --with-date_time --with-chrono --with-regex --with-serialization --with-program_options >/dev/null; fi
- if [[ "$LABEL" == "aarch64" ]]; then export CUSTOM_BOOST_ROOT="-DBOOST_ROOT=`pwd`" ; fi
- if [[ "$LABEL" == "aarch64" ]]; then export CUSTOM_TOOLCHAIN="-DCMAKE_TOOLCHAIN_FILE=../scripts/cross-aarch64.cmake" ; fi
- if [[ "$LABEL" == "aarch64" ]]; then export STRIP="$HOME/toolchain/gcc-arm-8.2-2018.08-x86_64-aarch64-linux-gnu/bin/aarch64-linux-gnu-strip" ; fi
- if [[ "$LABEL" == "aarch64" ]]; then cd $BASEDIR ; fi

script:
- eval $MATRIX_EVAL
- mkdir build && cd build
- cmake -DCMAKE_BUILD_TYPE=Release -DSTATIC=true .. ${CUSTOM_TOOLCHAIN} ${CUSTOM_BOOST_ROOT}
- make -j2

before_deploy:
- if [[ "${TRAVIS_TAG}" == "" ]]; then export TRAVIS_TAG=${TRAVIS_COMMIT} ; fi
- cd src
- TARGETS="BitNovexd miner zedwallet BitNovex-service zedwallet-beta cryptotest wallet-api"
- ${STRIP} ${TARGETS}
- rm -rf BitNovex-${TRAVIS_TAG}
- mkdir BitNovex-${TRAVIS_TAG}
- cp ${TARGETS} BitNovex-${TRAVIS_TAG}/
- cp ../../LICENSE BitNovex-${TRAVIS_TAG}/
- tar cvfz BitNovex-${TRAVIS_TAG}-${LABEL}.tar.gz BitNovex-${TRAVIS_TAG}/
- rm -rf builds
- mkdir builds
- cp BitNovex-${TRAVIS_TAG}-${LABEL}.tar.gz builds
- cd builds

deploy:
  - provider: releases
    api_key:
      secure: rTUFuUwtY+QBjChnFFFLVV3mMwWo1HDB4lTa7o9MueOuegfmUzZrATYS9RFspl8ziHtIxkEyw9MNa/uQoCBHRVOTltWEvQWH4ASI5Q0YgqAkiIGv0ZELWJRfPlzd0ymDYKNBiTuCt0n76wXDdPO7/bNWWjP2QzAlrLZhiiyByi/Gdc5PjpO+U7pSJqRdpoHVbCpxCWVttf1lzr4L2pGMnCEPpoKs7BqF0TA1++6H6iI+ToI5pw4vrhf/WpqNEBSpaNb9GtbLJ8MTZhpMWX8HPE4CAV/N46k8ovgRHABxEQExXhmukCqJrY3Pvct+ksLGyOpV4J/ACyC+7J+MkdqpbWXS95QfN/PWPuTIvB+5PEJLpqujocrHelPJUNI41D/2VsPNRRIquaXAGnx2M8CEMvkbBF3EpptfhkX81f48R4UaGB96SRxzgjOQgtJQjaR6o39tEAggdg2oaT3DC3SQra7PYfOSm5cAp0n6BGAgRsQWEy2IK77b8AGu4R/OagfSzQ0G5xxl20inqrokrm/eUw4dDC9uDYmy7K6h6SmuiSgR3kps3JMsBM364UOEbWE3onc2Pl1TCAD/y0LE5egWVGxOCUdNX7xRLOW4+LG1JFu54dbxUjuG3e0hy7w7nYQZ4AG8DUCgeimmHpsNLZXS8jB2ygBTgcLad0U4OiOXfAo=
    file:
      - BitNovex-${TRAVIS_TAG}-${LABEL}.tar.gz
    skip_cleanup: true
    on:
      repo: BitNovex/BitNovex
      tags: true
      condition: "$_DEPLOYABLE = true"
      all_branches: true
